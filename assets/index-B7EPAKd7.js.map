{"version":3,"file":"index-B7EPAKd7.js","sources":["../../src/typescript.svg","../../../../../../vite.svg","../../src/counter.ts","../../src/main.ts","../../src/fruitbasket/fruit.ts","../../src/fruitbasket/index.ts","../../src/mergesort/array.ts","../../src/mergesort/sort.ts","../../src/mergesort/index.ts"],"sourcesContent":["export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20aria-hidden='true'%20role='img'%20class='iconify%20iconify--logos'%20width='32'%20height='32'%20preserveAspectRatio='xMidYMid%20meet'%20viewBox='0%200%20256%20256'%3e%3cpath%20fill='%23007ACC'%20d='M0%20128v128h256V0H0z'%3e%3c/path%3e%3cpath%20fill='%23FFF'%20d='m56.612%20128.85l-.081%2010.483h33.32v94.68h23.568v-94.68h33.321v-10.28c0-5.69-.122-10.444-.284-10.566c-.122-.162-20.4-.244-44.983-.203l-44.74.122l-.121%2010.443Zm149.955-10.742c6.501%201.625%2011.459%204.51%2016.01%209.224c2.357%202.52%205.851%207.111%206.136%208.208c.08.325-11.053%207.802-17.798%2011.988c-.244.162-1.22-.894-2.317-2.52c-3.291-4.795-6.745-6.867-12.028-7.233c-7.76-.528-12.759%203.535-12.718%2010.321c0%201.992.284%203.17%201.097%204.795c1.707%203.536%204.876%205.649%2014.832%209.956c18.326%207.883%2026.168%2013.084%2031.045%2020.48c5.445%208.249%206.664%2021.415%202.966%2031.208c-4.063%2010.646-14.14%2017.879-28.323%2020.276c-4.388.772-14.79.65-19.504-.203c-10.28-1.828-20.033-6.908-26.047-13.572c-2.357-2.6-6.949-9.387-6.664-9.874c.122-.163%201.178-.813%202.356-1.504c1.138-.65%205.446-3.129%209.509-5.485l7.355-4.267l1.544%202.276c2.154%203.29%206.867%207.801%209.712%209.305c8.167%204.307%2019.383%203.698%2024.909-1.26c2.357-2.153%203.332-4.388%203.332-7.68c0-2.966-.366-4.266-1.91-6.501c-1.99-2.845-6.054-5.242-17.595-10.24c-13.206-5.69-18.895-9.224-24.096-14.832c-3.007-3.25-5.852-8.452-7.03-12.8c-.975-3.617-1.22-12.678-.447-16.335c2.723-12.76%2012.353-21.659%2026.25-24.3c4.51-.853%2014.994-.528%2019.424.569Z'%3e%3c/path%3e%3c/svg%3e\"","export default \"__VITE_PUBLIC_ASSET__d6945b69__\"","export function setupCounter(element: HTMLButtonElement) {\n  let counter = 0\n  const setCounter = (count: number) => {\n    counter = count\n    element.innerHTML = `count is ${counter}`\n  }\n  element.addEventListener('click', () => setCounter(counter + 1))\n  setCounter(0)\n}\n","import \"./style.css\";\nimport typescriptLogo from \"./typescript.svg\";\nimport viteLogo from \"/vite.svg\";\nimport { setupCounter } from \"./counter.ts\";\n\ndocument.querySelector<HTMLDivElement>(\"#app\")!.innerHTML = `\n  <div>\n    <a href=\"https://vite.dev\" target=\"_blank\">\n      <img src=\"${viteLogo}\" class=\"logo\" alt=\"Vite logo\" />\n    </a>\n    <a href=\"https://www.typescriptlang.org/\" target=\"_blank\">\n      <img src=\"${typescriptLogo}\" class=\"logo vanilla\" alt=\"TypeScript logo\" />\n    </a>\n    <h1>Vite + TypeScript</h1>\n    <div class=\"card\">\n      <button id=\"counter\" type=\"button\"></button>\n    </div>\n    <p class=\"read-the-docs\">\n      Click on the Vite and TypeScript logos to learn more\n    </p>\n  </div>\n`;\n\nsetupCounter(document.querySelector<HTMLButtonElement>(\"#counter\")!);\n","export type Fruit = {\n    id: number,\n    name: string,\n    price: number,\n}\n\nexport type OrderItem = {\n    id: number,\n    quantity: number,\n}\n\nexport type Order = {\n    id: number,\n    items: OrderItem[],\n}\n\n/**\n * Gets a fruit by its id\n * @param fruits the list of fruits\n * @param id the id of the fruit to find\n * @returns the fruit with the given id, or undefined if not found\n */\nconst getFruitById = (fruits: Fruit[], id: number): Fruit | undefined => {\n    const fruit = fruits.find((fruit) => fruit.id === id);\n\n    return fruit;\n}\n\n/**\n * Gets the price of an order item\n * @param item the order item\n * @param fruits the list of fruits\n * @returns the price of the order item or 0 if the fruit is not found\n */\nconst getPrice = (item: OrderItem, fruits: Fruit[]): number => {\n    const fruit = getFruitById(fruits, item.id);\n\n    if (fruit) {\n        return fruit.price * item.quantity;\n    }\n\n    return 0;\n}\n\n/**\n * Gets the total price of an order\n * @param order the order to calculate the total for\n * @param fruits the list of fruits\n * @returns the total price of the order\n */\nexport const calculateTotal = (order: Order, fruits: Fruit[]) => {\n    let total = 0;\n\n    for (const item of order.items) {\n        const price = getPrice(item, fruits);\n        total += price;\n    }\n\n    return total;\n} ","import { calculateTotal, Fruit, Order } from \"./fruit\";\n\nconst fruits: Fruit[] = [\n    {\n        id: 1,\n        name: \"Apple\",\n        price: 1.5,\n    },\n    {\n        id: 2,\n        name: \"Banana\",\n        price: 0.5,\n    },\n    {\n        id: 3,\n        name: \"Orange\",\n        price: 2.5,\n    },\n]\n\n\nconst order: Order = {\n    id: 1,\n    items: [\n        {\n            id: 1,\n            quantity: 2,\n        },\n        {\n            id: 2,\n            quantity: 3,\n        },\n        {\n            id: 5,\n            quantity: 1,\n        }\n    ],\n}\n\nconst total = calculateTotal(order, fruits);\nconsole.log(`Total price: $${total.toFixed(2)}`);","export const peekFirst = <T>(arr: T[]) => arr[0];\nexport const removeFirst = <T>(arr: T[]): T | undefined => arr.pop();\nexport const split = <T>(arr: T[], index: number): [T[], T[]] => {\n  // Check if the index is out of bounds\n  if (index < 0 || index > arr.length) {\n    throw new Error(`Cannot split at ${index}: out of bounds`);\n  }\n\n  const left = arr.slice(0, index);\n  const right = arr.slice(index);\n\n  return [left, right];\n};\n","import { peekFirst, removeFirst, split } from \"./array\";\n\ntype Comparable = number | string | Date;\n\n/**\n * Sorts an array using the merge sort algorithm\n * @param arr the array to sort\n * @returns a new sorted array\n */\nconst mergeSort = (arr: Comparable[]): Comparable[] => {\n  // Base case: an array of 0 or 1 elements is already sorted\n  if (arr.length === 1) {\n    return arr;\n  }\n\n  // Calculate the center of the array\n  const center = Math.floor(arr.length / 2);\n\n  // Split the array into two halves\n  let [left, right] = split(arr, center);\n\n  // Recursively sort each half\n  left = mergeSort(left);\n  right = mergeSort(right);\n\n  // Merge the sorted halves\n  return merge(left, right);\n};\n\n/**\n * Merge two sorted arrays\n * @param left A sorted array\n * @param right A sorted array\n * @returns A new sorted array containing all elements from left and right\n */\nconst merge = <C extends Comparable>(left: C[], right: C[]): C[] => {\n  const results: C[] = [];\n\n  // While there are elements in both arrays\n  while (left.length && right.length) {\n    let smallest: C;\n\n    const leftFirst = peekFirst(left);\n    const rightFirst = peekFirst(right);\n\n    // Compare the first elements of each array\n    if (leftFirst <= rightFirst) {\n      smallest = removeFirst(left)!;\n    } else {\n      smallest = removeFirst(right)!;\n    }\n\n    // Add the smaller element to the results\n    results.push(smallest);\n  }\n\n  return [...results, ...left, ...right];\n};\n\nexport default mergeSort;\n","import sort from \"./sort\";\n\nconst bigArray = Array.from({ length: 1000000 }, () => Math.random());\n\nconsole.time(\"mergeSort\");\nsort(bigArray);\nconsole.timeEnd(\"mergeSort\");"],"names":["typescriptLogo","viteLogo","setupCounter","element","counter","setCounter","count","getFruitById","fruits","id","fruit","getPrice","item","calculateTotal","order","total","price","peekFirst","arr","removeFirst","split","index","left","right","mergeSort","center","merge","results","smallest","leftFirst","rightFirst","bigArray","sort"],"mappings":"ssBAAA,MAAeA,EAAA,ymDCAAC,EAAA,2BCAR,SAASC,EAAaC,EAA4B,CACvD,IAAIC,EAAU,EACR,MAAAC,EAAcC,GAAkB,CAC1BF,EAAAE,EACFH,EAAA,UAAY,YAAYC,CAAO,EACzC,EACAD,EAAQ,iBAAiB,QAAS,IAAME,EAAWD,EAAU,CAAC,CAAC,EAC/DC,EAAW,CAAC,CACd,CCHA,SAAS,cAA8B,MAAM,EAAG,UAAY;AAAA;AAAA;AAAA,kBAG1CJ,CAAQ;AAAA;AAAA;AAAA,kBAGRD,CAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYhCE,EAAa,SAAS,cAAiC,UAAU,CAAE,ECDnE,MAAMK,EAAe,CAACC,EAAiBC,IACrBD,EAAO,KAAME,GAAUA,EAAM,KAAOD,CAAE,EAWlDE,EAAW,CAACC,EAAiBJ,IAA4B,CAC3D,MAAME,EAAQH,EAAaC,EAAQI,EAAK,EAAE,EAE1C,OAAIF,EACOA,EAAM,MAAQE,EAAK,SAGvB,CACX,EAQaC,EAAiB,CAACC,EAAcN,IAAoB,CAC7D,IAAIO,EAAQ,EAED,UAAAH,KAAQE,EAAM,MAAO,CACtB,MAAAE,EAAQL,EAASC,EAAMJ,CAAM,EAC1BO,GAAAC,CAAA,CAGN,OAAAD,CACX,ECzDMP,EAAkB,CACpB,CACI,GAAI,EACJ,KAAM,QACN,MAAO,GACX,EACA,CACI,GAAI,EACJ,KAAM,SACN,MAAO,EACX,EACA,CACI,GAAI,EACJ,KAAM,SACN,MAAO,GAAA,CAEf,EAGMM,EAAe,CACjB,GAAI,EACJ,MAAO,CACH,CACI,GAAI,EACJ,SAAU,CACd,EACA,CACI,GAAI,EACJ,SAAU,CACd,EACA,CACI,GAAI,EACJ,SAAU,CAAA,CACd,CAER,EAEMC,EAAQF,EAAeC,EAAON,CAAM,EAC1C,QAAQ,IAAI,iBAAiBO,EAAM,QAAQ,CAAC,CAAC,EAAE,ECxCxC,MAAME,EAAgBC,GAAaA,EAAI,CAAC,EAClCC,EAAkBD,GAA4BA,EAAI,IAAI,EACtDE,EAAQ,CAAIF,EAAUG,IAA8B,CAE/D,GAAIA,EAAQ,GAAKA,EAAQH,EAAI,OAC3B,MAAM,IAAI,MAAM,mBAAmBG,CAAK,iBAAiB,EAG3D,MAAMC,EAAOJ,EAAI,MAAM,EAAGG,CAAK,EACzBE,EAAQL,EAAI,MAAMG,CAAK,EAEtB,MAAA,CAACC,EAAMC,CAAK,CACrB,ECHMC,EAAaN,GAAoC,CAEjD,GAAAA,EAAI,SAAW,EACV,OAAAA,EAIT,MAAMO,EAAS,KAAK,MAAMP,EAAI,OAAS,CAAC,EAGxC,GAAI,CAACI,EAAMC,CAAK,EAAIH,EAAMF,EAAKO,CAAM,EAGrC,OAAAH,EAAOE,EAAUF,CAAI,EACrBC,EAAQC,EAAUD,CAAK,EAGhBG,EAAMJ,EAAMC,CAAK,CAC1B,EAQMG,EAAQ,CAAuBJ,EAAWC,IAAoB,CAClE,MAAMI,EAAe,CAAC,EAGf,KAAAL,EAAK,QAAUC,EAAM,QAAQ,CAC9B,IAAAK,EAEE,MAAAC,EAAYZ,EAAUK,CAAI,EAC1BQ,EAAab,EAAUM,CAAK,EAG9BM,GAAaC,EACfF,EAAWT,EAAYG,CAAI,EAE3BM,EAAWT,EAAYI,CAAK,EAI9BI,EAAQ,KAAKC,CAAQ,CAAA,CAGvB,MAAO,CAAC,GAAGD,EAAS,GAAGL,EAAM,GAAGC,CAAK,CACvC,ECvDMQ,EAAW,MAAM,KAAK,CAAE,OAAQ,KAAW,IAAM,KAAK,QAAQ,EAEpE,QAAQ,KAAK,WAAW,EACxBC,EAAKD,CAAQ,EACb,QAAQ,QAAQ,WAAW"}